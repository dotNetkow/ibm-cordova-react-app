{"version":3,"sources":["pages/Home.tsx","pages/Detail.tsx","utils/index.ts","pages/Track.tsx","App.tsx","index.tsx"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTrackClick","bind","assertThisInitialized","e","setTrackRun","react_default","a","createElement","runList","map","item","duration","differenceInSeconds","startDateTime","endDateTime","format","distance","onClick","Component","run","find","r","id","selectedRunId","toRad","x","Math","PI","R","getUniqueId","window","crypto","toString","replace","c","getRandomValues","Uint8Array","random","match","join","state","coordinateList","mapRef","React","createRef","startTracking","stopTracking","saveRun","reset","_this2","geolocator","navigator","geolocation","watchPosition","data","coords","setState","prevState","lastCoordinate","length","currentCoordinate","latitude","longitude","latlngA","latlngB","isMiles","arguments","undefined","dLat","dLatSin","sin","dLon","dLonSin","cos","atan2","sqrt","calcHaversineDistance","startTime","Date","objectSpread","concat","latlng","google","maps","LatLng","setCenter","enableHighAccuracy","Map","current","center","lat","lng","zoom","endTime","clearWatch","addRun","ref","style","height","width","App","page","setSelectedRun","goBackHome","partialRun","newRun","pageName","Track","Detail","pages_Home","renderSelectedPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"uNAyCeA,cA7Bb,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACxBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFIA,4EAIbU,GACXP,KAAKJ,MAAMY,+CAGX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACIX,KAAKJ,MAAMgB,QAAQC,IAAI,SAAAC,GACvB,IAAMC,EAAWC,IAAoBF,EAAKG,cAAeH,EAAKI,aAC9D,OACET,EAAAC,EAAAC,cAAA,UACGQ,iBAAOL,EAAKG,cAAe,cAAcR,EAAAC,EAAAC,cAAA,WACzCQ,iBAAOJ,EAAU,aAAaN,EAAAC,EAAAC,cAAA,WAC9BG,EAAKM,SAHR,SAQNX,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAKI,cAAtB,qBAxBWkB,aC4BJ3B,mLA1BJ,IAAAE,EAAAG,KACDuB,EAAMvB,KAAKJ,MAAMgB,QAAQY,KAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAO7B,EAAKD,MAAM+B,gBAC7D,IAAKJ,EACH,OAAO,KAET,IAAMR,EAAWC,IAAoBO,EAAIN,cAAeM,EAAIL,aAE5D,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBACaQ,iBAAOJ,EAAU,aAAaN,EAAAC,EAAAC,cAAA,WAD3C,aAEaY,EAAIH,SAFjB,MAIAX,EAAAC,EAAAC,cAAA,UACGQ,iBAAOI,EAAIN,cAAe,yBAlBtBK,aCTbM,EAAQ,SAACC,GAAD,OAAgBA,EAAIC,KAAKC,GAAM,KACvCC,EAAI,KAgCH,SAASC,IACd,OAAIC,OAAOC,QAPH,CAAC,KAAKC,YAAc,IAAIA,YAAc,IAAIA,YAAc,IAAIA,YAAc,KAAKA,YAAYC,QAAQ,SAAU,SAASC,GAE5H,OAAQA,EADOJ,OAAOC,OAAOI,gBAAgB,IAAIC,WAAW,IACzC,GAAK,IAAMF,EAAI,GAAGF,SAAS,QAQvB,KAAhBN,KAAKW,UAAkBL,WAAWM,MAAM,UAAY,IAAIC,KAAK,SC2FzDhD,cA5Gb,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACtBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDgD,MAAQ,CACX3B,cAAe,KACfC,YAAa,KACb2B,eAAgB,GAChBzB,SAAU,GAGZvB,EAAKiD,OAASC,IAAMC,YAEpBnD,EAAKoD,cAAgBpD,EAAKoD,cAAc5C,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKqD,aAAerD,EAAKqD,aAAa7C,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKsD,QAAUtD,EAAKsD,QAAQ9C,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACfA,EAAKuD,MAAQvD,EAAKuD,MAAM/C,KAAXP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAfSA,+EAiBR,IAAAwD,EAAArD,KACdA,KAAKsD,WAAaC,UAAUC,YAAYC,cAAc,SAACC,GACrD,GAAmB,MAAfA,EAAKC,QAA8B,MAAZN,EAAKxC,IAAhC,CAIAwC,EAAKO,SAAS,SAACC,GACb,IAAMC,EAAiBD,EAAUhB,eAAegB,EAAUhB,eAAekB,OAAS,GAC5EC,EAAsC,CAACN,EAAKC,OAAOM,SAAUP,EAAKC,OAAOO,WAC3E9C,EAAWyC,EAAUzC,SACrB0C,IACF1C,GDvCH,SAA+B+C,EAAqBC,GAAqC,IAAhBC,IAAgBC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,KAAAA,UAAA,GAExFE,EAAO5C,EAAMwC,EAAQ,GAAKD,EAAQ,IAClCM,EAAU3C,KAAK4C,IAAIF,EAAO,GAC1BG,EAAO/C,EAAMwC,EAAQ,GAAKD,EAAQ,IAClCS,EAAU9C,KAAK4C,IAAIC,EAAO,GAE1BjE,EAAK+D,EAAUA,EACV3C,KAAK+C,IAAIjD,EAAMuC,EAAQ,KAAOrC,KAAK+C,IAAIjD,EAAMwC,EAAQ,KAAOQ,EAAUA,EAC3EtC,EAAI,EAAIR,KAAKgD,MAAMhD,KAAKiD,KAAKrE,GAAIoB,KAAKiD,KAAK,EAAIrE,IACjDU,EAAWY,EAAIM,EAInB,OAFI+B,IAASjD,GAAY,SAElBA,ECyBa4D,CAAsBlB,EAAgBE,IAEpD,IAAMiB,EAAY,IAAIC,KAEtB,OAAOpF,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEEzC,WACAyB,eAAgBgB,EAAUhB,eAAeuC,OAAO,CAACpB,IACjD/C,cAAegE,MAInB,IAAII,EAAS,IAAIC,OAAOC,KAAKC,OAAO9B,EAAKC,OAAOM,SAAUP,EAAKC,OAAOO,WACtEb,EAAKxC,IAAI4E,UAAUJ,KAElB,aAAU,CAAEK,oBAAoB,gDAGnC1F,KAAKa,IAAM,IAAIyE,OAAOC,KAAKI,IAAI3F,KAAK8C,OAAO8C,QAAS,CAClDC,OAAQ,CAACC,KAAM,OAAQC,IAAK,SAC5BC,KAAM,2CAIR,IAAMC,EAAU,IAAIf,KAEpBlF,KAAK4D,SAAS,SAACC,GACb,OAAO/D,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEE3C,YAAa+E,MAIjB1C,UAAUC,YAAY0C,WAAWlG,KAAKsD,8CAGlCtD,KAAK4C,MAAM3B,eAAiBjB,KAAK4C,MAAM1B,aAAelB,KAAK4C,MAAMxB,UACnEpB,KAAKJ,MAAMuG,OAAO,CAChBzE,GAAI,MACJT,cAAejB,KAAK4C,MAAM3B,cAC1BC,YAAalB,KAAK4C,MAAM1B,YACxB2B,eAAgB7C,KAAK4C,MAAMC,eAC3BzB,SAAUpB,KAAK4C,MAAMxB,6EASzB,IAAML,EAAYf,KAAK4C,MAAM3B,eAAiBjB,KAAK4C,MAAM1B,YACrDF,IAAoBhB,KAAK4C,MAAM3B,cAAejB,KAAK4C,MAAM1B,aACzD,EAEJ,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKyF,IAAKpG,KAAK8C,OAAQuD,MAAO,CAAEC,OAAQ,QAASC,MAAO,WACxD9F,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACGQ,iBAAOJ,EAAU,aAAaN,EAAAC,EAAAC,cAAA,WAC9BX,KAAK4C,MAAMxB,SAFd,OAKFX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAKiD,eAAtB,UAEFxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAKkD,cAAtB,QACAzC,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAKmD,SAAtB,QACA1C,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAKoD,OAAtB,mBA1GO9B,aC8EJkF,cAlFb,SAAAA,EAAY5G,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,IACtB3G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0G,GAAArG,KAAAH,KAAMJ,KAEDgD,MAAQ,CACX6D,KAAM,OACN9E,cAAe,KACff,QAAS,IAEXf,EAAKsG,OAAStG,EAAKsG,OAAO9F,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACdA,EAAK6G,eAAiB7G,EAAK6G,eAAerG,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKW,YAAcX,EAAKW,YAAYH,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAK8G,WAAa9G,EAAK8G,WAAWtG,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXIA,sEAcjB+G,GACL,IAAMC,EAAM/G,OAAAqF,EAAA,EAAArF,CAAA,GACP8G,EADO,CAEVlF,GAAIO,MAGNjC,KAAK4D,SAAS,SAACC,GACb,OAAO/D,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEEjD,QAASiD,EAAUjD,QAAQwE,OAAOyB,8CAKzBlF,GACb3B,KAAK4D,SAAS,SAACC,GACb,OAAO/D,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEElC,gBACA8E,KAAM,mDAMVzG,KAAK4D,SAAS,SAACC,GACb,OAAO/D,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEE4C,KAAM,iDAMVzG,KAAK4D,SAAS,SAACC,GACb,OAAO/D,OAAAqF,EAAA,EAAArF,CAAA,GACF+D,EADL,CAEE4C,KAAM,4CAKH,IAAApD,EAAArD,KAYP,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACwB,SAApBX,KAAK4C,MAAM6D,KACXhG,EAAAC,EAAAC,cAAA,UAAQU,QAASrB,KAAK2G,YAAtB,UACA,KAHJ,oBAbuB,SAACG,GAC1B,OAAQA,GACR,IAAK,QACH,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,CAAOZ,OAAQ9C,EAAK8C,SAC7B,IAAK,SACH,OAAO1F,EAAAC,EAAAC,cAACqG,EAAD,CAAQpG,QAASyC,EAAKT,MAAMhC,QAASe,cAAe0B,EAAKT,MAAMjB,eAAiB,KACzF,QACE,OAAOlB,EAAAC,EAAAC,cAACsG,EAAD,CAAMrG,QAASyC,EAAKT,MAAMhC,QAAS8F,eAAgBrD,EAAKqD,eAAgBlG,YAAa6C,EAAK7C,eAY/F0G,CAAmBlH,KAAK4C,MAAM6D,cA7EtBnF,aCPlB6F,IAASC,OAAO3G,EAAAC,EAAAC,cAAC0G,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4e4424a9.chunk.js","sourcesContent":["import React, { Component, MouseEvent } from 'react';\nimport { Run } from '../types';\nimport { format } from 'date-fns';\nimport differenceInSeconds from 'date-fns/difference_in_seconds'\n\ntype Props = {\n  runList: Run[]\n  setSelectedRun: (selectedRunId: string) => void\n  setTrackRun: () => void;\n}\n\nclass Home extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.onTrackClick = this.onTrackClick.bind(this);\n  }\n  onTrackClick(e: MouseEvent) {\n    this.props.setTrackRun();\n  }\n  render() {\n    return (\n      <div>\n        <h1>All Runs</h1>\n        <ul>\n          { this.props.runList.map(item => {\n            const duration = differenceInSeconds(item.startDateTime, item.endDateTime);\n            return (\n              <li>\n                {format(item.startDateTime, 'dd/MM/yyyy')}<br/>\n                {format(duration, 'mm:ss:SSS')}<br/>\n                {item.distance} m\n              </li>\n            );\n          }) }\n        </ul>\n        <button onClick={this.onTrackClick}>Track Run</button>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Run } from '../types';\nimport { calcHaversineDistance } from '../utils';\nimport { format } from 'date-fns';\nimport differenceInSeconds from 'date-fns/difference_in_seconds'\n\n\ntype Props = {\n  runList: Run[],\n  selectedRunId: string\n}\n\nclass Home extends Component<Props> {\n  render() {\n    const run = this.props.runList.find(r => r.id === this.props.selectedRunId);\n    if (!run) {\n      return null;\n    }\n    const duration = differenceInSeconds(run.startDateTime, run.endDateTime)\n\n    return (\n      <div>\n        <h1>Run Detail</h1>\n        <div>\n          <dl>\n            <dt>\n              Duration: {format(duration, 'mm:ss:SSS')}<br/>\n              Distance: {run.distance} m\n            </dt>\n            <dd>\n              {format(run.startDateTime, 'dd/MM/yyyy')}\n            </dd>\n          </dl>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import { format, parse } from 'date-fns';\nimport { Coordinate } from '../types';\n\nconst toRad = (x: number) => (x * Math.PI) / 180;\nconst R = 6371; // km\n\n/**\n * Calculates the haversine distance between point A, and B.\n * @param {number[]} latlngA [lat, lng] point A\n * @param {number[]} latlngB [lat, lng] point B\n * @param {boolean} isMiles If we are using miles, else km.\n */\nexport function calcHaversineDistance(latlngA: Coordinate, latlngB: Coordinate, isMiles = true) {\n\n  const dLat = toRad(latlngB[0] - latlngA[0]);\n  const dLatSin = Math.sin(dLat / 2);\n  const dLon = toRad(latlngB[1] - latlngA[1]);\n  const dLonSin = Math.sin(dLon / 2);\n\n  const a = (dLatSin * dLatSin) +\n            (Math.cos(toRad(latlngA[1])) * Math.cos(toRad(latlngB[1])) * dLonSin * dLonSin);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  let distance = R * c;\n\n  if (isMiles) distance /= 1.60934;\n\n  return distance;\n}\n\nfunction uuidv4() {\n  return ([1e7].toString() + -1e3.toString() + -4e3.toString() + -8e3.toString() + -1e11.toString()).replace(/[018]/g, function(c: any) {\n    const random = window.crypto.getRandomValues(new Uint8Array(1)) as Uint8Array;\n    return (c ^ random[0] & 15 >> c / 4).toString(16);\n  });\n}\n\nexport function getUniqueId() {\n  if (window.crypto) {\n    return uuidv4();\n  }\n  return ((Math.random() * 10e16).toString().match(/.{4}/g) || []).join('-');\n}\n","import React, { Component } from 'react';\nimport { Coordinate, Run } from '../types';\nimport { calcHaversineDistance } from '../utils';\nimport { format } from 'date-fns';\nimport differenceInSeconds from 'date-fns/difference_in_seconds'\n\ntype Props = {\n  addRun: (r: Run) => void\n}\n\ntype State = {\n  startDateTime: Date | null;\n  endDateTime: Date | null;\n  coordinateList: Coordinate[];\n  distance: number\n}\n\nclass Home extends Component<Props, State> {\n  geolocator: any;\n  geolocation: any;\n  map?: google.maps.Map;\n  mapRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      startDateTime: null,\n      endDateTime: null,\n      coordinateList: [],\n      distance: 0\n    }\n\n    this.mapRef = React.createRef();\n\n    this.startTracking = this.startTracking.bind(this);\n    this.stopTracking = this.stopTracking.bind(this);\n    this.saveRun = this.saveRun.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  startTracking() {\n    this.geolocator = navigator.geolocation.watchPosition((data: Position) => {\n      if (data.coords == null || this.map == null) {\n        return;\n      }\n\n      this.setState((prevState) => {\n        const lastCoordinate = prevState.coordinateList[prevState.coordinateList.length - 1];\n        const currentCoordinate: [number, number] = [data.coords.latitude, data.coords.longitude];\n        let distance = prevState.distance;\n        if (lastCoordinate) {\n          distance += calcHaversineDistance(lastCoordinate, currentCoordinate);\n        }\n        const startTime = new Date();\n\n        return {\n          ...prevState,\n          distance,\n          coordinateList: prevState.coordinateList.concat([currentCoordinate]),\n          startDateTime: startTime\n        }\n      });\n\n      var latlng = new google.maps.LatLng(data.coords.latitude, data.coords.longitude);\n      this.map.setCenter(latlng);\n\n    }, () => {}, { enableHighAccuracy: true });\n  }\n  componentDidMount() {\n    this.map = new google.maps.Map(this.mapRef.current, {\n      center: {lat: -34.397, lng: 150.644},\n      zoom: 8\n    });\n  }\n  stopTracking() {\n    const endTime = new Date();\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        endDateTime: endTime\n      };\n    })\n\n    navigator.geolocation.clearWatch(this.geolocator);\n  }\n  saveRun() {\n    if (this.state.startDateTime && this.state.endDateTime && this.state.distance) {\n      this.props.addRun({\n        id: 'new',\n        startDateTime: this.state.startDateTime,\n        endDateTime: this.state.endDateTime,\n        coordinateList: this.state.coordinateList,\n        distance: this.state.distance\n      });\n    }\n  }\n  reset() {\n\n  }\n\n  render() {\n    const duration = (this.state.startDateTime && this.state.endDateTime) ?\n        differenceInSeconds(this.state.startDateTime, this.state.endDateTime) :\n        0;\n\n    return (\n      <div>\n        <h1>Track Run</h1>\n        <div ref={this.mapRef} style={{ height: '600px', width: '300px' }}></div>\n        <footer>\n          <dl>\n            <dt>\n              {format(duration, 'mm:ss:SSS')}<br/>\n              {this.state.distance} m\n            </dt>\n          </dl>\n          <div>\n            <button onClick={this.startTracking}>Start</button>\n          </div>\n          <div>\n            <button onClick={this.stopTracking}>Stop</button>\n            <button onClick={this.saveRun}>Save</button>\n            <button onClick={this.reset}>Reset</button>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport Track from './pages/Track';\nimport { Run } from './types';\nimport { getUniqueId } from './utils';\n\ntype State = {\n  page: 'home' | 'track' | 'detail';\n  selectedRunId: string | null;\n  runList: Run[]\n}\nclass App extends Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      page: 'home',\n      selectedRunId: null,\n      runList: [],\n    }\n    this.addRun = this.addRun.bind(this);\n    this.setSelectedRun = this.setSelectedRun.bind(this);\n    this.setTrackRun = this.setTrackRun.bind(this);\n    this.goBackHome = this.goBackHome.bind(this);\n  }\n\n  addRun(partialRun: Run) {\n    const newRun = {\n      ...partialRun,\n      id: getUniqueId(),\n    };\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        runList: prevState.runList.concat(newRun)\n      };\n    });\n  }\n\n  setSelectedRun(selectedRunId: string) {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        selectedRunId,\n        page: 'detail'\n      } \n    });\n  }\n\n  setTrackRun() {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        page: 'track'\n      } \n    });\n  }\n\n  goBackHome() {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        page: 'home'\n      }\n    })\n  }\n\n  render() {\n    const renderSelectedPage = (pageName: string) => {\n      switch (pageName) {\n      case 'track':\n        return <Track addRun={this.addRun} />;\n      case 'detail':\n        return <Detail runList={this.state.runList} selectedRunId={this.state.selectedRunId || ''} />\n      default:\n        return <Home runList={this.state.runList} setSelectedRun={this.setSelectedRun} setTrackRun={this.setTrackRun} />;\n      }\n    }\n\n    return (\n      <div>\n        <header>\n          { this.state.page !== 'home' ?\n            <button onClick={this.goBackHome}>&#60; Home</button> :\n            null }\n          React Run Mapper\n        </header>\n        { renderSelectedPage(this.state.page) }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}